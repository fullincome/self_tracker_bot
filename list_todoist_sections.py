#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–ª–æ–Ω–æ–∫ (sections) –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö Todoist
"""

import os
import sys
from todoist_api import TodoistAPI

def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_token = os.getenv('TODOIST_TOKEN')
    if not api_token:
        print("Error: TODOIST_TOKEN environment variable is not set")
        sys.exit(1)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TodoistAPI(api_token)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        projects = client.get_projects()
        
        if not projects:
            print("–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print("–ö–æ–ª–æ–Ω–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö Todoist:")
        print("=" * 60)
        
        for project in projects:
            project_id = project.get('id', 'N/A')
            project_name = project.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            
            print(f"\nüìÅ –ü—Ä–æ–µ–∫—Ç: {project_name} (ID: {project_id})")
            print("-" * 40)
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            sections = client.get_sections(project_id)
            
            if not sections:
                print("  (–ù–µ—Ç –∫–æ–ª–æ–Ω–æ–∫ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥)")
            else:
                for i, section in enumerate(sections, 1):
                    section_id = section.get('id', 'N/A')
                    section_name = section.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                    order = section.get('order', 0)
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–ª–æ–Ω–∫—É
                    default_marker = " (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" if i == 1 else ""
                    
                    print(f"  {i}. ID: {section_id} | –ù–∞–∑–≤–∞–Ω–∏–µ: {section_name} | –ü–æ—Ä—è–¥–æ–∫: {order}{default_marker}")
        
        print("\n" + "=" * 60)
        print("üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("- –ó–∞–¥–∞—á–∏ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
        print("- –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É –≤ —Ç–µ–∫—Å—Ç–µ: '–∑–∞–¥–∞—á–∞ –≤ –∫–æ–ª–æ–Ω–∫–µ –í —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞'")
        print("- –ö–æ–ª–æ–Ω–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º Kanban-–≤–∏–¥–æ–º")
        
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 