#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–µ–∫—Ü–∏–∏ Todoist –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
"""

import os
import sys
from todoist_api import TodoistAPI

def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_token = os.getenv('TODOIST_TOKEN')
    if not api_token:
        print("Error: TODOIST_TOKEN environment variable is not set")
        sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(sys.argv) < 2:
        print("Usage: python3 get_todoist_ids.py <project_name> [section_name]")
        print("Examples:")
        print("  python3 get_todoist_ids.py '–†–∞–±–æ—Ç–∞'")
        print("  python3 get_todoist_ids.py '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' '–í —Ä–∞–±–æ—Ç–µ'")
        sys.exit(1)

    project_name = sys.argv[1]
    section_name = sys.argv[2] if len(sys.argv) > 2 else None

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TodoistAPI(api_token)
    
    try:
        # –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç
        project = client.get_project_by_name(project_name)
        if not project:
            print(f"‚ùå –ü—Ä–æ–µ–∫—Ç '{project_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:")
            projects = client.get_projects()
            for p in projects:
                print(f"  - {p.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (ID: {p.get('id', 'N/A')})")
            sys.exit(1)
        
        project_id = project.get('id')
        project_name_actual = project.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: '{project_name_actual}' (ID: {project_id})")
        
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ —Å–µ–∫—Ü–∏—è, –∏—â–µ–º –µ—ë
        if section_name:
            section = client.get_section_by_name(section_name, project_id)
            if not section:
                print(f"‚ùå –°–µ–∫—Ü–∏—è '{section_name}' –≤ –ø—Ä–æ–µ–∫—Ç–µ '{project_name_actual}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                print(f"\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ '{project_name_actual}':")
                sections = client.get_sections(project_id)
                if not sections:
                    print("  (–ù–µ—Ç —Å–µ–∫—Ü–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥)")
                else:
                    for s in sections:
                        print(f"  - {s.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (ID: {s.get('id', 'N/A')})")
                sys.exit(1)
            
            section_id = section.get('id')
            section_name_actual = section.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            
            print(f"‚úÖ –°–µ–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: '{section_name_actual}' (ID: {section_id})")
            
            print(f"\nüìã –î–ª—è .env —Ñ–∞–π–ª–∞:")
            print(f"TODOIST_DEFAULT_PROJECT_ID={project_id}")
            print(f"TODOIST_DEFAULT_SECTION_ID={section_id}")
            
        else:
            print(f"\nüìã –î–ª—è .env —Ñ–∞–π–ª–∞:")
            print(f"TODOIST_DEFAULT_PROJECT_ID={project_id}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
            sections = client.get_sections(project_id)
            if sections:
                print(f"\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ '{project_name_actual}':")
                for s in sections:
                    print(f"  - {s.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (ID: {s.get('id', 'N/A')})")
                print(f"\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–±–∞–≤—å—Ç–µ:")
                print(f"TODOIST_DEFAULT_SECTION_ID=<ID_—Å–µ–∫—Ü–∏–∏>")
            else:
                print("(–í —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ—Ç —Å–µ–∫—Ü–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–∏–¥)")
        
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 